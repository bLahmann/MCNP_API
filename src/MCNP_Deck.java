import java.util.Iterator;
import java.util.Vector;

/**
 * Created by lahmann on 06/04/2015.
 */
public class MCNP_Deck extends MCNP_Object {

    private String name;

    private Vector<MCNP_Cell> cells;
    private Vector<MCNP_Particle> particlesToSimulate;
    private Vector<Pair> parameters;
    private Integer numberOfParticles = 0;
    private MCNP_Source source;

    public MCNP_Deck(String name){
        this.name = name;

        cells = new Vector<MCNP_Cell>();
        particlesToSimulate = new Vector<MCNP_Particle>();
        parameters = new Vector<Pair>();

        this.addParameter("Parameter", "Value");
    }

    public void addCell(MCNP_Cell cell){
        cells.add(cell);
    }

    public void addParticleToSimulate(MCNP_Particle particleToSimulate){
        particlesToSimulate.add(particleToSimulate);
    }

    public void addParameter(String name, Object parameter){
        parameters.add(new Pair(name, parameter));
    }

    public void setSource(MCNP_Source source){
        this.source = source;
    }

    public String toString(){
        Vector<MCNP_Surface> uniqueSurfaces = new Vector<MCNP_Surface>();
        Vector<MCNP_Material> uniqueMaterials = new Vector<MCNP_Material>();
        Vector<String> lines = new Vector<String>();

        // Write title information
        lines.add(MCNP_API_Utilities.centerString(this.name, 80));
        lines.add(MCNP_API_Utilities.commentLine);
        lines.add("C " + MCNP_API_Utilities.centerString("Deck generated by MCNP API", 76));
        lines.add("C " + MCNP_API_Utilities.centerString("Author: " + System.getProperty("user.name"), 76));
        lines.add("C ");

        for(Pair parameter : parameters){
            String s = new String("C ");
            for(int i = 0; i < 38 - parameter.first().toString().length(); i++){
                s += " ";
            }
            s += parameter.first().toString() + " : " + parameter.second().toString();
            lines.add(s);
        }
        lines.add("C ");

        // Write cell cards
        lines.add(MCNP_API_Utilities.commentLine);
        lines.add("C *" + MCNP_API_Utilities.centerString("CELL CARDS", 74) + "  *");
        lines.add(MCNP_API_Utilities.commentLine);
        lines.add("C ");

        for(MCNP_Cell cell : cells){
            lines.add(cell.toString());

            for(MCNP_SurfaceGroup surfaceGroup : cell.getSurfaceGroups()){
                for(MCNP_Surface surface : surfaceGroup.getSurfaces()){
                    if(!uniqueSurfaces.contains(surface)){
                        uniqueSurfaces.add(surface);
                    }
                }
            }

            if(!uniqueMaterials.contains(cell.getMaterial())){
                uniqueMaterials.add(cell.getMaterial());
            }
        }
        lines.add("");

        // Write surface cards
        lines.add(MCNP_API_Utilities.commentLine);
        lines.add("C *" + MCNP_API_Utilities.centerString("SURFACE CARDS", 74) + "  *");
        lines.add(MCNP_API_Utilities.commentLine);
        lines.add("C ");

        for(MCNP_Surface surface : uniqueSurfaces){
            lines.add(surface.toString());
        }
        lines.add("");

        // Write data cards
        lines.add(MCNP_API_Utilities.commentLine);
        lines.add("C *" + MCNP_API_Utilities.centerString("DATA CARDS", 74) + "  *");
        lines.add(MCNP_API_Utilities.commentLine);
        lines.add("C ");

        String modeCard = new String("MODE ");
        for(MCNP_Particle particle : particlesToSimulate){
            modeCard += particle.getId();
        }
        lines.add(modeCard);
        lines.add("NPS  " + String.format("%.4e", Math.floor(numberOfParticles)));

        for(MCNP_Particle particle : particlesToSimulate){
            lines.add(particle.getPhysicsCard());

            String importanceCard = "imp:" + particle.getId() + " ";
            for(MCNP_Cell cell : cells){
                String s = cell.getImportance().toString() + " ";

                if(importanceCard.length() + s.length() > 78) {
                    importanceCard += "\n        ";
                }
                importanceCard += s;
            }

            lines.add(importanceCard);
        }

        for(MCNP_Material material : uniqueMaterials){
            lines.add(material.toString());
        }

        lines.add(source.toString());


        String finalString = new String();
        Iterator<String> iterator = lines.iterator();
        while(iterator.hasNext()){
            finalString += iterator.next();
            if(iterator.hasNext())
                finalString += "\n";
        }

        return finalString;
    }




}
